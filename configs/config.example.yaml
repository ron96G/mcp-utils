# MCP Server Configuration
# This file contains all configuration options for the MCP OAuth2 server

server:
  # Server listening configuration
  port: 8080
  host: "0.0.0.0"

  # TLS configuration (optional)
  # tls_cert_file: "/path/to/cert.pem"
  # tls_key_file: "/path/to/key.pem"

  # Trusted proxy IPs (for reverse proxy setups)
  trusted_proxies:
    - "127.0.0.1"
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"

  # Server timeouts
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"

# Microsoft Entra ID configuration
entra_id:
  # Required: Your Entra ID tenant information
  tenant_id: "<some-tenant-id>"
  client_id: "<some-client-id>"
  client_secret: "<some-client-secret>"

  issuer: "https://login.microsoftonline.com"
  audience: "<some-audience>"

  # Default scopes to request from Entra ID
  scopes:
    - "openid"
    - "profile"
    - "email"

  # Redirect URI for the server's callback
  redirect_uri: "http://localhost:8080/oauth2/callback"

# OAuth2 server configuration
oauth:
  # Required: OAuth2 server issuer URL (should match your domain)
  issuer: "http://localhost:8080"
  base_url: "http://localhost:8080"

  # Token lifetimes
  token_lifetime: "1h" # Access token lifetime
  refresh_token_lifetime: "24h" # Refresh token lifetime
  code_lifetime: "10m" # Authorization code lifetime

  # JWT signing key (generate a strong random key)
  signing_key: "your-jwt-signing-key-here-make-it-very-long-and-random"

  # Security settings
  require_pkce: true # Require PKCE for all authorization code flows

  # CORS allowed origins for browser-based clients
  allowed_origins:
    - "http://localhost:*"
    - "https://localhost:*"
    - "http://127.0.0.1:*"
    - "https://127.0.0.1:*"

# Logging configuration
logging:
  level: "info" # debug, info, warn, error
  output: "stdout" # stdout, stderr, or file path

# Storage configuration for sessions, tokens, and client data
storage:
  type: "memory" # memory, redis, postgres
  ttl: "1h" # Default TTL for stored data

  # Redis configuration (when type is "redis")
  redis:
    address: "localhost:6379"
    password: "" # Leave empty if no password
    db: 0
    max_retries: 3
    dial_timeout: "5s"

  # PostgreSQL configuration (when type is "postgres")
  postgres:
    host: "localhost"
    port: 5432
    user: "mcp_server"
    password: "your-postgres-password"
    database: "mcp_server"
    ssl_mode: "prefer" # disable, require, verify-ca, verify-full, prefer
